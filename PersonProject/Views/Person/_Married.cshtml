@model PersonProject.Models.SpouseViewModel

@{
                /**/

                ViewBag.Title = "Married";
}



<h2>Married</h2>

@using (Html.BeginForm("Married", "Person", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Person</h4>
        <hr />
        <p> @ViewData["error"]</p>

        <div class="form-group">
            @Html.LabelFor(model => model.spouse_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.first_name,
                          new
                          {

                              @class = "autocomplete-with-hidden",
                              data_url = Url.Action("GetListForAutocomplete", "Person")
                          })
                @Html.HiddenFor(model => model.spouse_id)



            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="return check()" />
                <a class="btn btn-default" href="@Url.Action("Index", "Person")">Cancel</a>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    $(".autocomplete-with-hidden").autocomplete({
        minLength: 0,
        appendTo: '#marital_status_change',
        source: function (request, response) {
            var url = $(this.element).data('url');

            $.getJSON(url, { term: request.term }, function (data) {
                response(data);
            })
        },
        select: function (event, ui) {
            $(event.target).next('input[type=hidden]').val(ui.item.id);
        },
        change: function (event, ui) {
            if (!ui.item) {
                $(event.target).val('').next('input[type=hidden]').val('');
            }
        }
    });





</script>